<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog on Tobias Ara Svensson</title>
    <link>http://tobiasara.com/blog/</link>
    <description>Recent content in Blog on Tobias Ara Svensson</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-US</language>
    <lastBuildDate>Sat, 21 Jul 2018 17:04:34 +0200</lastBuildDate>
    
	<atom:link href="http://tobiasara.com/blog/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Sending Elixir&#39;s logs to Logstash as JSON</title>
      <link>http://tobiasara.com/blog/sending-elixirs-logs-to-logstash-as-json/</link>
      <pubDate>Sat, 21 Jul 2018 17:04:34 +0200</pubDate>
      
      <guid>http://tobiasara.com/blog/sending-elixirs-logs-to-logstash-as-json/</guid>
      <description>Adopting Elixir was a pleasure - it fit nicely into our microservice architecture and most of our tech stack. The only missing piece was our ELK-based logging infrastructure, where we sent logs to Logstash formatted in JSON, an easily machine-readable format. As there was no library at the time that did this, I decided to write one myself!
In this post, we will cover how to create your own Elixir logger backend, how to send JSON logs to Logstash via TCP, unit testing, and strategies for handling log spikes.</description>
    </item>
    
    <item>
      <title>How to avoid exhausting arguments and get things done</title>
      <link>http://tobiasara.com/blog/how-to-avoid-exhausting-arguments-and-get-things-done/</link>
      <pubDate>Fri, 06 Jul 2018 15:51:10 +0200</pubDate>
      
      <guid>http://tobiasara.com/blog/how-to-avoid-exhausting-arguments-and-get-things-done/</guid>
      <description>Remember the last time you had a long, heated discussion and found a perfect solution? Me neither.
Wouldn&amp;rsquo;t it be amazing to have a better way to resolve arguments?
I recall a particularly exhausting discussion that went on for over a month. Long ago I worked on large scale distributed system. At some point we found a potential issue that could lead to lost updates in our data sets.</description>
    </item>
    
  </channel>
</rss>